TARGET := prog


SRC_DIR = $(shell realpath .)
LLVM13 ?= /usr/bin

BPFTOOL=$(SRC_DIR)/../../tools/bpftool
CFLAGS?=-I$(SRC_DIR)/../../libs/headers

LIBS = -lbpf -lelf -lz

all: clean prog.bpf.o skel $(TARGET)

.PHONY: clean

clean:
	@rm -f $(TARGET)
	@rm -f prog.bpf.o
	@rm -f prog.bpf.ll

# Empty rule because not all programs need to use a skeleton
skel: prog.bpf.o ;

$(TARGET): %: prog.c Makefile
	@gcc $(CFLAGS) -o $(TARGET) prog.c $(LIBS)

prog.bpf.o: prog.bpf.c
	@${LLVM13}/clang -S \
	    -target bpf \
	    -D __BPF_TRACING__ \
			$(CFLAGS) \
	    -Wall \
	    -Werror \
	    -O2 -emit-llvm -c -g prog.bpf.c
	@${LLVM13}/llc -march=bpf -filetype=obj -o prog.bpf.o prog.bpf.ll

.PHONY: compress
compress:
	@rm -f compress/*.gz
	@mkdir -p compress
	@gcc -fpreprocessed -dD -E -P prog.bpf.c -o compress/bpf.nocomm.temp.c
	@sed -e 's/\s\s\s*/ /g' compress/bpf.nocomm.temp.c > compress/bpf.nospace.temp.c
	@gzip -c compress/bpf.nospace.temp.c > compress/bpf.gz
	@{ echo -n "original," ; stat --format=%s compress/bpf.gz; } > compress/size.txt
	@rm -f compress/*.temp.c
